# app.py
import streamlit as st
import tensorflow as tf
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image
import numpy as np
from PIL import Image
import io


class DefectClassifierApp:
    def __init__(self, model_path):
        self.model = load_model(model_path)
        self.img_height, self.img_width = self.model.input_shape[1:3]

    def preprocess_image(self, uploaded_file):
        img = Image.open(uploaded_file)
        img = img.resize((self.img_width, self.img_height))
        img_array = np.array(img)
        img_array = np.expand_dims(img_array, axis=0)
        img_array = img_array / 255.0
        return img_array, img

    def predict(self, uploaded_file):
        processed_img, original_img = self.preprocess_image(uploaded_file)
        prediction = self.model.predict(processed_img)
        confidence = prediction[0][0]

        if confidence > 0.5:
            class_name = "defect"
            final_confidence = confidence
        else:
            class_name = "not_defect"
            final_confidence = 1 - confidence

        return class_name, final_confidence, original_img


# Streamlit –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
def main():
    st.title("üîç –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–µ—Ñ–µ–∫—Ç–æ–≤")
    st.write("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –¥–µ—Ñ–µ–∫—Ç–æ–≤")

    # –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ (–∫–µ—à–∏—Ä—É–µ—Ç—Å—è)
    @st.cache_resource
    def load_classifier():
        return DefectClassifierApp("defect_detection_continued.h5")

    classifier = load_classifier()

    # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    uploaded_file = st.file_uploader(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ",
        type=['jpg', 'jpeg', 'png']
    )

    if uploaded_file is not None:
        # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
        class_name, confidence, img = classifier.predict(uploaded_file)

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        col1, col2 = st.columns(2)

        with col1:
            st.image(img, caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_column_width=True)

        with col2:
            st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:")

            if class_name == "defect":
                st.error(f"üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω –¥–µ—Ñ–µ–∫—Ç!")
                st.write(f"–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: {confidence:.2%}")
            else:
                st.success(f"‚úÖ –î–µ—Ñ–µ–∫—Ç–æ–≤ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ")
                st.write(f"–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: {confidence:.2%}")

            st.write(f"**–°—Ç–∞—Ç—É—Å:** {class_name}")
            st.write(f"**–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:** {confidence:.4f}")


if __name__ == "__main__":
    main()